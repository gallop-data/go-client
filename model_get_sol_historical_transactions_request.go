/*
Gallop API

Data and insights APIs, webooks, and dashboards enabling businesses to launch tokenized products in seconds.

API version: 1.0.0
Contact: support@higallop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetSolHistoricalTransactionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSolHistoricalTransactionsRequest{}

// GetSolHistoricalTransactionsRequest struct for GetSolHistoricalTransactionsRequest
type GetSolHistoricalTransactionsRequest struct {
	// The Gallop slug for the collection. Please see sol/getCollections endpoint.
	CollectionTag string `json:"collection_tag"`
	// The pagination cursor.
	Page *int32 `json:"page,omitempty"`
}

// NewGetSolHistoricalTransactionsRequest instantiates a new GetSolHistoricalTransactionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSolHistoricalTransactionsRequest(collectionTag string) *GetSolHistoricalTransactionsRequest {
	this := GetSolHistoricalTransactionsRequest{}
	this.CollectionTag = collectionTag
	return &this
}

// NewGetSolHistoricalTransactionsRequestWithDefaults instantiates a new GetSolHistoricalTransactionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSolHistoricalTransactionsRequestWithDefaults() *GetSolHistoricalTransactionsRequest {
	this := GetSolHistoricalTransactionsRequest{}
	return &this
}

// GetCollectionTag returns the CollectionTag field value
func (o *GetSolHistoricalTransactionsRequest) GetCollectionTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionTag
}

// GetCollectionTagOk returns a tuple with the CollectionTag field value
// and a boolean to check if the value has been set.
func (o *GetSolHistoricalTransactionsRequest) GetCollectionTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionTag, true
}

// SetCollectionTag sets field value
func (o *GetSolHistoricalTransactionsRequest) SetCollectionTag(v string) {
	o.CollectionTag = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *GetSolHistoricalTransactionsRequest) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolHistoricalTransactionsRequest) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *GetSolHistoricalTransactionsRequest) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *GetSolHistoricalTransactionsRequest) SetPage(v int32) {
	o.Page = &v
}

func (o GetSolHistoricalTransactionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSolHistoricalTransactionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collection_tag"] = o.CollectionTag
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	return toSerialize, nil
}

type NullableGetSolHistoricalTransactionsRequest struct {
	value *GetSolHistoricalTransactionsRequest
	isSet bool
}

func (v NullableGetSolHistoricalTransactionsRequest) Get() *GetSolHistoricalTransactionsRequest {
	return v.value
}

func (v *NullableGetSolHistoricalTransactionsRequest) Set(val *GetSolHistoricalTransactionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSolHistoricalTransactionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSolHistoricalTransactionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSolHistoricalTransactionsRequest(val *GetSolHistoricalTransactionsRequest) *NullableGetSolHistoricalTransactionsRequest {
	return &NullableGetSolHistoricalTransactionsRequest{value: val, isSet: true}
}

func (v NullableGetSolHistoricalTransactionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSolHistoricalTransactionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


