/*
Gallop API

Data and insights APIs, webooks, and dashboards enabling businesses to launch tokenized products in seconds.

API version: 1.0.0
Contact: support@higallop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetSolCollectionSummaryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSolCollectionSummaryRequest{}

// GetSolCollectionSummaryRequest struct for GetSolCollectionSummaryRequest
type GetSolCollectionSummaryRequest struct {
	// The Gallop tag to identify the collection.
	CollectionTag string `json:"collection_tag"`
	// An attribute of the NFT.
	GroupBy *string `json:"group_by,omitempty"`
	// The start date to pull data for calculations
	StartDate *string `json:"start_date,omitempty"`
	// The end date to pull data for calculations
	EndDate *string `json:"end_date,omitempty"`
	// The currency to report results in
	ReptCurr *string `json:"rept_curr,omitempty"`
	// Exclude suspected wash transactions?
	ExcludeWash *bool `json:"exclude_wash,omitempty"`
}

// NewGetSolCollectionSummaryRequest instantiates a new GetSolCollectionSummaryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSolCollectionSummaryRequest(collectionTag string) *GetSolCollectionSummaryRequest {
	this := GetSolCollectionSummaryRequest{}
	this.CollectionTag = collectionTag
	return &this
}

// NewGetSolCollectionSummaryRequestWithDefaults instantiates a new GetSolCollectionSummaryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSolCollectionSummaryRequestWithDefaults() *GetSolCollectionSummaryRequest {
	this := GetSolCollectionSummaryRequest{}
	return &this
}

// GetCollectionTag returns the CollectionTag field value
func (o *GetSolCollectionSummaryRequest) GetCollectionTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionTag
}

// GetCollectionTagOk returns a tuple with the CollectionTag field value
// and a boolean to check if the value has been set.
func (o *GetSolCollectionSummaryRequest) GetCollectionTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionTag, true
}

// SetCollectionTag sets field value
func (o *GetSolCollectionSummaryRequest) SetCollectionTag(v string) {
	o.CollectionTag = v
}

// GetGroupBy returns the GroupBy field value if set, zero value otherwise.
func (o *GetSolCollectionSummaryRequest) GetGroupBy() string {
	if o == nil || IsNil(o.GroupBy) {
		var ret string
		return ret
	}
	return *o.GroupBy
}

// GetGroupByOk returns a tuple with the GroupBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolCollectionSummaryRequest) GetGroupByOk() (*string, bool) {
	if o == nil || IsNil(o.GroupBy) {
		return nil, false
	}
	return o.GroupBy, true
}

// HasGroupBy returns a boolean if a field has been set.
func (o *GetSolCollectionSummaryRequest) HasGroupBy() bool {
	if o != nil && !IsNil(o.GroupBy) {
		return true
	}

	return false
}

// SetGroupBy gets a reference to the given string and assigns it to the GroupBy field.
func (o *GetSolCollectionSummaryRequest) SetGroupBy(v string) {
	o.GroupBy = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *GetSolCollectionSummaryRequest) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolCollectionSummaryRequest) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *GetSolCollectionSummaryRequest) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *GetSolCollectionSummaryRequest) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *GetSolCollectionSummaryRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolCollectionSummaryRequest) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *GetSolCollectionSummaryRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *GetSolCollectionSummaryRequest) SetEndDate(v string) {
	o.EndDate = &v
}

// GetReptCurr returns the ReptCurr field value if set, zero value otherwise.
func (o *GetSolCollectionSummaryRequest) GetReptCurr() string {
	if o == nil || IsNil(o.ReptCurr) {
		var ret string
		return ret
	}
	return *o.ReptCurr
}

// GetReptCurrOk returns a tuple with the ReptCurr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolCollectionSummaryRequest) GetReptCurrOk() (*string, bool) {
	if o == nil || IsNil(o.ReptCurr) {
		return nil, false
	}
	return o.ReptCurr, true
}

// HasReptCurr returns a boolean if a field has been set.
func (o *GetSolCollectionSummaryRequest) HasReptCurr() bool {
	if o != nil && !IsNil(o.ReptCurr) {
		return true
	}

	return false
}

// SetReptCurr gets a reference to the given string and assigns it to the ReptCurr field.
func (o *GetSolCollectionSummaryRequest) SetReptCurr(v string) {
	o.ReptCurr = &v
}

// GetExcludeWash returns the ExcludeWash field value if set, zero value otherwise.
func (o *GetSolCollectionSummaryRequest) GetExcludeWash() bool {
	if o == nil || IsNil(o.ExcludeWash) {
		var ret bool
		return ret
	}
	return *o.ExcludeWash
}

// GetExcludeWashOk returns a tuple with the ExcludeWash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolCollectionSummaryRequest) GetExcludeWashOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludeWash) {
		return nil, false
	}
	return o.ExcludeWash, true
}

// HasExcludeWash returns a boolean if a field has been set.
func (o *GetSolCollectionSummaryRequest) HasExcludeWash() bool {
	if o != nil && !IsNil(o.ExcludeWash) {
		return true
	}

	return false
}

// SetExcludeWash gets a reference to the given bool and assigns it to the ExcludeWash field.
func (o *GetSolCollectionSummaryRequest) SetExcludeWash(v bool) {
	o.ExcludeWash = &v
}

func (o GetSolCollectionSummaryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSolCollectionSummaryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collection_tag"] = o.CollectionTag
	if !IsNil(o.GroupBy) {
		toSerialize["group_by"] = o.GroupBy
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.ReptCurr) {
		toSerialize["rept_curr"] = o.ReptCurr
	}
	if !IsNil(o.ExcludeWash) {
		toSerialize["exclude_wash"] = o.ExcludeWash
	}
	return toSerialize, nil
}

type NullableGetSolCollectionSummaryRequest struct {
	value *GetSolCollectionSummaryRequest
	isSet bool
}

func (v NullableGetSolCollectionSummaryRequest) Get() *GetSolCollectionSummaryRequest {
	return v.value
}

func (v *NullableGetSolCollectionSummaryRequest) Set(val *GetSolCollectionSummaryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSolCollectionSummaryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSolCollectionSummaryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSolCollectionSummaryRequest(val *GetSolCollectionSummaryRequest) *NullableGetSolCollectionSummaryRequest {
	return &NullableGetSolCollectionSummaryRequest{value: val, isSet: true}
}

func (v NullableGetSolCollectionSummaryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSolCollectionSummaryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


