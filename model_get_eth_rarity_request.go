/*
Gallop API

Data and insights APIs, webooks, and dashboards enabling businesses to launch tokenized products in seconds.

API version: 1.0.0
Contact: support@higallop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetEthRarityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEthRarityRequest{}

// GetEthRarityRequest struct for GetEthRarityRequest
type GetEthRarityRequest struct {
	// The Ethereum contract address to identify the collection.
	CollectionAddress string `json:"collection_address"`
	// Dict containing trait keys and weight values.
	Weights map[string]interface{} `json:"weights,omitempty"`
	// An array of token ids.
	TokenId []string `json:"token_id,omitempty"`
}

// NewGetEthRarityRequest instantiates a new GetEthRarityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEthRarityRequest(collectionAddress string) *GetEthRarityRequest {
	this := GetEthRarityRequest{}
	this.CollectionAddress = collectionAddress
	return &this
}

// NewGetEthRarityRequestWithDefaults instantiates a new GetEthRarityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEthRarityRequestWithDefaults() *GetEthRarityRequest {
	this := GetEthRarityRequest{}
	return &this
}

// GetCollectionAddress returns the CollectionAddress field value
func (o *GetEthRarityRequest) GetCollectionAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionAddress
}

// GetCollectionAddressOk returns a tuple with the CollectionAddress field value
// and a boolean to check if the value has been set.
func (o *GetEthRarityRequest) GetCollectionAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionAddress, true
}

// SetCollectionAddress sets field value
func (o *GetEthRarityRequest) SetCollectionAddress(v string) {
	o.CollectionAddress = v
}

// GetWeights returns the Weights field value if set, zero value otherwise.
func (o *GetEthRarityRequest) GetWeights() map[string]interface{} {
	if o == nil || isNil(o.Weights) {
		var ret map[string]interface{}
		return ret
	}
	return o.Weights
}

// GetWeightsOk returns a tuple with the Weights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthRarityRequest) GetWeightsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Weights) {
		return map[string]interface{}{}, false
	}
	return o.Weights, true
}

// HasWeights returns a boolean if a field has been set.
func (o *GetEthRarityRequest) HasWeights() bool {
	if o != nil && !isNil(o.Weights) {
		return true
	}

	return false
}

// SetWeights gets a reference to the given map[string]interface{} and assigns it to the Weights field.
func (o *GetEthRarityRequest) SetWeights(v map[string]interface{}) {
	o.Weights = v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *GetEthRarityRequest) GetTokenId() []string {
	if o == nil || isNil(o.TokenId) {
		var ret []string
		return ret
	}
	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthRarityRequest) GetTokenIdOk() ([]string, bool) {
	if o == nil || isNil(o.TokenId) {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *GetEthRarityRequest) HasTokenId() bool {
	if o != nil && !isNil(o.TokenId) {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given []string and assigns it to the TokenId field.
func (o *GetEthRarityRequest) SetTokenId(v []string) {
	o.TokenId = v
}

func (o GetEthRarityRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEthRarityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collection_address"] = o.CollectionAddress
	if !isNil(o.Weights) {
		toSerialize["weights"] = o.Weights
	}
	if !isNil(o.TokenId) {
		toSerialize["token_id"] = o.TokenId
	}
	return toSerialize, nil
}

type NullableGetEthRarityRequest struct {
	value *GetEthRarityRequest
	isSet bool
}

func (v NullableGetEthRarityRequest) Get() *GetEthRarityRequest {
	return v.value
}

func (v *NullableGetEthRarityRequest) Set(val *GetEthRarityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEthRarityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEthRarityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEthRarityRequest(val *GetEthRarityRequest) *NullableGetEthRarityRequest {
	return &NullableGetEthRarityRequest{value: val, isSet: true}
}

func (v NullableGetEthRarityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEthRarityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


