/*
Gallop API

Data and insights APIs, webooks, and dashboards enabling businesses to launch tokenized products in seconds.

API version: 1.0.0
Contact: support@higallop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetSolRarityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSolRarityRequest{}

// GetSolRarityRequest struct for GetSolRarityRequest
type GetSolRarityRequest struct {
	// The Gallop tag for the Solana collection. Please see sol/getCollections endpoint.
	CollectionTag string `json:"collection_tag"`
	// A list of token addresses.
	MintAddress []string `json:"mint_address,omitempty"`
	// Dict containing trait keys and weight values.
	Weights map[string]interface{} `json:"weights,omitempty"`
}

// NewGetSolRarityRequest instantiates a new GetSolRarityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSolRarityRequest(collectionTag string) *GetSolRarityRequest {
	this := GetSolRarityRequest{}
	this.CollectionTag = collectionTag
	return &this
}

// NewGetSolRarityRequestWithDefaults instantiates a new GetSolRarityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSolRarityRequestWithDefaults() *GetSolRarityRequest {
	this := GetSolRarityRequest{}
	return &this
}

// GetCollectionTag returns the CollectionTag field value
func (o *GetSolRarityRequest) GetCollectionTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionTag
}

// GetCollectionTagOk returns a tuple with the CollectionTag field value
// and a boolean to check if the value has been set.
func (o *GetSolRarityRequest) GetCollectionTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionTag, true
}

// SetCollectionTag sets field value
func (o *GetSolRarityRequest) SetCollectionTag(v string) {
	o.CollectionTag = v
}

// GetMintAddress returns the MintAddress field value if set, zero value otherwise.
func (o *GetSolRarityRequest) GetMintAddress() []string {
	if o == nil || isNil(o.MintAddress) {
		var ret []string
		return ret
	}
	return o.MintAddress
}

// GetMintAddressOk returns a tuple with the MintAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolRarityRequest) GetMintAddressOk() ([]string, bool) {
	if o == nil || isNil(o.MintAddress) {
		return nil, false
	}
	return o.MintAddress, true
}

// HasMintAddress returns a boolean if a field has been set.
func (o *GetSolRarityRequest) HasMintAddress() bool {
	if o != nil && !isNil(o.MintAddress) {
		return true
	}

	return false
}

// SetMintAddress gets a reference to the given []string and assigns it to the MintAddress field.
func (o *GetSolRarityRequest) SetMintAddress(v []string) {
	o.MintAddress = v
}

// GetWeights returns the Weights field value if set, zero value otherwise.
func (o *GetSolRarityRequest) GetWeights() map[string]interface{} {
	if o == nil || isNil(o.Weights) {
		var ret map[string]interface{}
		return ret
	}
	return o.Weights
}

// GetWeightsOk returns a tuple with the Weights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolRarityRequest) GetWeightsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Weights) {
		return map[string]interface{}{}, false
	}
	return o.Weights, true
}

// HasWeights returns a boolean if a field has been set.
func (o *GetSolRarityRequest) HasWeights() bool {
	if o != nil && !isNil(o.Weights) {
		return true
	}

	return false
}

// SetWeights gets a reference to the given map[string]interface{} and assigns it to the Weights field.
func (o *GetSolRarityRequest) SetWeights(v map[string]interface{}) {
	o.Weights = v
}

func (o GetSolRarityRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSolRarityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collection_tag"] = o.CollectionTag
	if !isNil(o.MintAddress) {
		toSerialize["mint_address"] = o.MintAddress
	}
	if !isNil(o.Weights) {
		toSerialize["weights"] = o.Weights
	}
	return toSerialize, nil
}

type NullableGetSolRarityRequest struct {
	value *GetSolRarityRequest
	isSet bool
}

func (v NullableGetSolRarityRequest) Get() *GetSolRarityRequest {
	return v.value
}

func (v *NullableGetSolRarityRequest) Set(val *GetSolRarityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSolRarityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSolRarityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSolRarityRequest(val *GetSolRarityRequest) *NullableGetSolRarityRequest {
	return &NullableGetSolRarityRequest{value: val, isSet: true}
}

func (v NullableGetSolRarityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSolRarityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


