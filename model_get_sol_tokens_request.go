/*
Gallop API

Data and insights APIs, webooks, and dashboards enabling businesses to launch tokenized products in seconds.

API version: 1.0.0
Contact: support@higallop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetSolTokensRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSolTokensRequest{}

// GetSolTokensRequest struct for GetSolTokensRequest
type GetSolTokensRequest struct {
	// The Gallop tag for the Solana collection. Please see sol/getCollections endpoint.
	CollectionTag string `json:"collection_tag"`
	// A list of token addresses.
	MintAddress []string `json:"mint_address,omitempty"`
	// The pagination cursor.
	Page *int32 `json:"page,omitempty"`
	// The number of records returned per page.
	PageSize *int32 `json:"page_size,omitempty"`
}

// NewGetSolTokensRequest instantiates a new GetSolTokensRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSolTokensRequest(collectionTag string) *GetSolTokensRequest {
	this := GetSolTokensRequest{}
	this.CollectionTag = collectionTag
	return &this
}

// NewGetSolTokensRequestWithDefaults instantiates a new GetSolTokensRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSolTokensRequestWithDefaults() *GetSolTokensRequest {
	this := GetSolTokensRequest{}
	return &this
}

// GetCollectionTag returns the CollectionTag field value
func (o *GetSolTokensRequest) GetCollectionTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollectionTag
}

// GetCollectionTagOk returns a tuple with the CollectionTag field value
// and a boolean to check if the value has been set.
func (o *GetSolTokensRequest) GetCollectionTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionTag, true
}

// SetCollectionTag sets field value
func (o *GetSolTokensRequest) SetCollectionTag(v string) {
	o.CollectionTag = v
}

// GetMintAddress returns the MintAddress field value if set, zero value otherwise.
func (o *GetSolTokensRequest) GetMintAddress() []string {
	if o == nil || isNil(o.MintAddress) {
		var ret []string
		return ret
	}
	return o.MintAddress
}

// GetMintAddressOk returns a tuple with the MintAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolTokensRequest) GetMintAddressOk() ([]string, bool) {
	if o == nil || isNil(o.MintAddress) {
		return nil, false
	}
	return o.MintAddress, true
}

// HasMintAddress returns a boolean if a field has been set.
func (o *GetSolTokensRequest) HasMintAddress() bool {
	if o != nil && !isNil(o.MintAddress) {
		return true
	}

	return false
}

// SetMintAddress gets a reference to the given []string and assigns it to the MintAddress field.
func (o *GetSolTokensRequest) SetMintAddress(v []string) {
	o.MintAddress = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *GetSolTokensRequest) GetPage() int32 {
	if o == nil || isNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolTokensRequest) GetPageOk() (*int32, bool) {
	if o == nil || isNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *GetSolTokensRequest) HasPage() bool {
	if o != nil && !isNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *GetSolTokensRequest) SetPage(v int32) {
	o.Page = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *GetSolTokensRequest) GetPageSize() int32 {
	if o == nil || isNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolTokensRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || isNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *GetSolTokensRequest) HasPageSize() bool {
	if o != nil && !isNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *GetSolTokensRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

func (o GetSolTokensRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSolTokensRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collection_tag"] = o.CollectionTag
	if !isNil(o.MintAddress) {
		toSerialize["mint_address"] = o.MintAddress
	}
	if !isNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !isNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	return toSerialize, nil
}

type NullableGetSolTokensRequest struct {
	value *GetSolTokensRequest
	isSet bool
}

func (v NullableGetSolTokensRequest) Get() *GetSolTokensRequest {
	return v.value
}

func (v *NullableGetSolTokensRequest) Set(val *GetSolTokensRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSolTokensRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSolTokensRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSolTokensRequest(val *GetSolTokensRequest) *NullableGetSolTokensRequest {
	return &NullableGetSolTokensRequest{value: val, isSet: true}
}

func (v NullableGetSolTokensRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSolTokensRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


